import socket
from concurrent.futures import ThreadPoolExecutor

# Function to check a single port
def check_port(ip, port):
    try:
        # Create a socket object
        sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        # Set timeout for the connection attempt
        sock.settimeout(1)
        # Try to connect to the IP address and port
        result = sock.connect_ex((ip, port))
        # If the port is open
        if result == 0:
            print(f"Port {port} is open")
        sock.close()
    except socket.error:
        pass

# Function to scan ports in a range
def scan_ports(ip, start_port, end_port):
    print(f"Scanning {ip} for open ports between {start_port} and {end_port}...")
    with ThreadPoolExecutor(max_workers=100) as executor:
        for port in range(start_port, end_port + 1):
            executor.submit(check_port, ip, port)
# Example usage
target_ip = input("Enter IP address to scan: ")
scan_ports(target_ip, 1, 1024)  # Scanning common ports from 1 to 1024
